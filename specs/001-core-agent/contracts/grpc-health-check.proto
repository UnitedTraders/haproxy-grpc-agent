// gRPC Health Checking Protocol
// Standard protocol used by the agent to check backend gRPC services
// Reference: https://github.com/grpc/grpc/blob/master/doc/health-checking.md

syntax = "proto3";

package grpc.health.v1;

// Health is the standard gRPC health checking service.
// The agent uses this as a client to query backend gRPC servers.
service Health {
  // Check gets the health status of the specified service.
  // If the requested service is unknown, the call will fail with status NOT_FOUND.
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

message HealthCheckRequest {
  // Service name to check.
  // Empty string "" means the overall server health.
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}

// Agent Mapping:
// - SERVING → respond with "up\n" to HAProxy
// - NOT_SERVING, UNKNOWN, SERVICE_UNKNOWN → respond with "down\n" to HAProxy
// - RPC error (timeout, unreachable) → respond with "down\n" to HAProxy
